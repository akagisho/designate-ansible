[DEFAULT]
########################
## General Configuration
########################
# Show more verbose log output (sets INFO log level output)
verbose = True

# Show debugging output in logs (sets DEBUG log level output)
debug = True

# Top-level directory for maintaining designate's state
state_path = /var/lib/designate

# Log directory
logdir = /var/log/designate

# Driver used for issuing notifications
notification_driver = messaging

# Use "sudo designate-rootwrap /etc/designate/rootwrap.conf" to use the real
# root filter facility.
# Change to "sudo" to skip the filtering and just run the comand directly
# root_helper = sudo

# RabbitMQ Config
rabbit_userid = designate
rabbit_password = designate
#rabbit_virtual_host = /
#rabbit_use_ssl = False
#rabbit_hosts = 127.0.0.1:5672

########################
## Service Configuration
########################
#-----------------------
# Central Service
#-----------------------
[service:central]
# Driver used for backend communication (e.g. fake, rpc, bind9, powerdns)
backend_driver = bind9

# Maximum domain name length
#max_domain_name_len = 255

# Maximum record name length
#max_record_name_len = 255

#-----------------------
# API Service
#-----------------------
[service:api]
# Address to bind the API server
api_host = 0.0.0.0

# Port to bind the API server
api_port = 9001

# Authentication strategy to use - can be either "noauth" or "keystone"
auth_strategy = noauth

# Enable API Version 1
enable_api_v1 = True

# Enable API Version 2
enable_api_v2 = True

# Enabled API Version 1 extensions
enabled_extensions_v1 = diagnostics, quotas, reports, sync, touch

# Enabled API Version 2 extensions
enabled_extensions_v2 = quotas, reports

#-----------------------
# mDNS Service
#-----------------------
[service:mdns]
#workers = None
host = 0.0.0.0
port = 5354
#tcp_backlog = 100

#-----------------------
# Pool Manager Service
#-----------------------
[service:pool_manager]
pool_id = 794ccc2c-d751-44fe-b57f-8894c9f5c842

#####################
## Pool Configuration
#####################
[pool:794ccc2c-d751-44fe-b57f-8894c9f5c842]
nameservers = {% for slave in slaves %}{% if loop.index0 > 0 %},{% endif %}{{ slave.uuid}}1{% endfor %}

targets = {% for slave in slaves %}{% if loop.index0 > 0 %},{% endif %}{{ slave.uuid}}2{% endfor %}


{% for slave in slaves %}
[pool_nameserver:{{ slave.uuid}}1]
host = {{ slave.addr }}
port = 53

{% endfor %}
{% for slave in slaves %}
[pool_target:{{ slave.uuid}}2]
options = rndc_host: {{ slave.addr }}, rndc_port: 953, rndc_key_file: /etc/bind/rndc.key, port: 53, host: {{ slave.addr }}
masters = {{ master }}:5354
type = bind9

{% endfor %}
########################
## Storage Configuration
########################
#-----------------------
# SQLAlchemy Storage
#-----------------------
[storage:sqlalchemy]
# Database connection string - to configure options for a given implementation
# like sqlalchemy or other see below
connection = mysql://designate:designate@127.0.0.1/designate
#connection_debug = 100
#connection_trace = True
#sqlite_synchronous = True
#idle_timeout = 3600
#max_retries = 10
#retry_interval = 10

###################################
## Pool Manager Cache Configuration
###################################
#-----------------------
# SQLAlchemy Pool Manager Cache
#-----------------------
[pool_manager_cache:sqlalchemy]
connection = mysql://designate:designate@127.0.0.1/designate_pool_manager
#connection_debug = 100
#connection_trace = False
#sqlite_synchronous = True
#idle_timeout = 3600
max_retries = 10
retry_interval = 15

##[backend:bind9]
##rndc_host = 127.0.0.1
##rndc_port = 953
##rndc_key_file = /etc/bind/rndc.key
